name: 'get_terraform_output'
description: 'Get one of the outputs of the terraform code of the current repository'
inputs:
  workspace:
    description: 'Terraform workspace to use, can be either "base" or "$REPOSITORY_NAME"'
    required: true
  terraform_output_name:
    description: 'The name given to the output type variable in the terraform code'
    required: true
outputs:
  value:
    description: 'The value of targeted the output type variable in the terraform code'
    value: ${{ steps.get_terraform_output.outputs.terraform_output_value }}


runs:
  using: "composite"
  steps:

    - id: get_terraform_output
      run: |
          source ./.github/functions/initialize_terraform.sh
          initialize_terraform ${{ env.REPOSITORY_NAME }} ${{ inputs.workspace }} $STATE_BUCKET
          # install jq utility
          apt install -y jq
          if [ -z "$(terraform output -json | jq -r ".${{ inputs.terraform_output_name }} // empty")" ]; then
              # the output is not in the state, the output becomes the empty string
              terraform_output_value=""
          else
              # the output is in the state and we get its value
              terraform_output_value=$(terraform output ${{ inputs.terraform_output_name }} | tr -d '"')
          fi
          echo "terraform_output_value=$terraform_output_value >> $GITHUB_OUTPUT
          echo "${{ inputs.terraform_output_name }}=$terraform_output_value"
      shell: bash

    - id: echo_terraform_output
      run: echo "${{ inputs.terraform_output_name }}=${{ steps.get_terraform_output.outputs.terraform_output_value }}"
      shell: bash
