name: 'set_variables'
description: 'Configure environment variables for a workflow'
inputs:
  set_up_terraform_variables:
    description: 'Whether to also create corresponding terraform variables'
    required: false
    default: 'true'
  variable_prefix_to_filter_on:
    description: 'Prefix of variables to keep, for example if people-counting is built from people-counting-functional, we only keep the corresponding variables, prefixed PEOPLE_COUNTING'
    required: false
    default: ''
  discard_shared_variables:
    description: 'Whether discard shared variables or not'
    required: false
    default: 'false'
  env_file_artifact_name:
    description: 'An environment variable file to load'
    required: false
    default: ''
outputs:
  created_env_file_path:
    description: 'The environment variables file to load'
    value: ${{ steps.set_created_env_file_path.outputs.value }}
runs:
  using: "composite"
  steps:
    - id: set_created_env_file_path
      run: |
        # temporary file that will be generated
        echo "value=$(mktemp)" >> $GITHUB_OUTPUT
      shell: bash
    - run: |
        python3 .github/actions/set_variables/create_env_file.py \
          --repository_name ${{ env.REPOSITORY_NAME }} \
          --environment_variables_file_path ${{ steps.set_created_env_file_path.outputs.value }} \
          --add_terraform_variables ${{ inputs.set_up_terraform_variables }} \
          --variable_prefix_to_filter_on "${{ inputs.variable_prefix_to_filter_on }}" \
          --discard_shared_variables ${{ inputs.discard_shared_variables }}
      shell: bash
    - uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.env_file_artifact_name }}
        path: /tmp
      if: ${{ inputs.env_file_artifact_name != '' }}
    - run: |
        caller_workflow_env_file_path=/tmp/${{ inputs.env_file_artifact_name }}
        refactored_caller_workflow_env_file_path=${caller_workflow_env_file_path}_refactored
          python3 .github/actions/set_variables/refactor_caller_workflow_env_file.py \
            --repository_where_variables_are_defined ${{ env.REPOSITORY_NAME }} \
            --caller_workflow_env_file_path $caller_workflow_env_file_path \
            --refactored_caller_workflow_env_file_path $refactored_caller_workflow_env_file_path
        cat $refactored_caller_workflow_env_file_path >> ${{ steps.set_created_env_file_path.outputs.value }}
      if: ${{ inputs.env_file_artifact_name != '' }}
      shell: bash
    - uses: cardinalby/export-env-action@v2
      with:
        envFile: ${{ steps.set_created_env_file_path.outputs.value }}
        expand: 'true'
