name: My Action
description: 'A YAML mapping or dictionary of keyword arguments'
inputs:
  terraform_disable_bools:
    required: true
    description: 'A YAML mapping or dictionary of keyword arguments'
runs:
  using: "composite"
  steps:
    - run: |
        # if inputs.terraform_disable_bools is not empty
        if [ -n "${{ inputs.terraform_disable_bools }}" ]; then
          for terraform_disable_bool in "${{ inputs.terraform_disable_bools }}"; do
              export ${terraform_disable_bool^^}=0
              echo "${terraform_disable_bool^^}=0" >> $GITHUB_ENV
        
              export TF_VAR_${terraform_disable_bool,,}=0
              echo "TF_VAR_${terraform_disable_bool,,}=0" >> $GITHUB_ENV
          done
        fi

      shell: bash
    - run: |
        gcloud projects create ${{ env.PROJECT_ID }} --organization ${{ env.ORGANIZATION_ID }}  || true
        gcloud config set project ${{ env.PROJECT_ID }}
        yes | gcloud beta billing projects link ${{ env.PROJECT_ID }} --billing-account ${{ env.BILLING_ACCOUNT }}
        DEFAULT_OWNERS_OF_PROJECTS=${{ env.DEFAULT_OWNERS_OF_PROJECTS }}
        # for default_owner_of_project in "${DEFAULT_OWNERS_OF_PROJECTS[@]}"; do
        for default_owner_of_project in "${DEFAULT_OWNERS_OF_PROJECTS[@]}"; do
          gcloud projects add-iam-policy-binding $TF_VAR_project_id --member=user:$default_owner_of_project --role=roles/owner
        done
      shell: bash