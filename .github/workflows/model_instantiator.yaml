name: model_instantiator

on:
  push:
    branches:
      - main
      - develop
    paths:
      - .github/workflows/model_instantiator.yaml
      - dockerfiles/model_instantiator.dockerfile
      - shared/**
      - model-instantiator/**
  pull_request:
    branches:
      - main
      - develop
    paths:
      - .github/workflows/model_instantiator.yaml
      - dockerfiles/model_instantiator.dockerfile
      - shared/**
      - model-instantiator/**
  workflow_dispatch:

env:
  REPOSITORY_NAME: model-instantiator
  PACKAGE_NAME: model_instantiator

jobs:
  build:
    name: build
    runs-on: self-hosted
    container: google/cloud-sdk
    outputs:
      image_name: ${{ steps.build_push.outputs.image_name }}
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        uses: ./.github/actions/set_variables
      - id: gcloud_auth
        name: GCP authentication
        uses: ./.github/actions/gcloud_auth
        with:
          repository_name: ${{ env.REPOSITORY_NAME }}
          region: ${{ env.REGION }}
          ci_service_account: ${{ secrets.MODEL_INSTANTIATOR_CI_SERVICE_ACCOUNT }}
          google_application_credentials: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
      - id: build_push
        name: Build push
        uses: ./.github/actions/build_push
        with:
          repository_name: ${{ env.REPOSITORY_NAME }}
          artifact_registry_path: ${{ env.ARTIFACT_REGISTRY_PATH }}

  tests:
    name: tests
    needs:
      - build
    runs-on: self-hosted
    container:
      image: ${{ needs.build.outputs.image_name }}
      credentials:
        username: _json_key_base64
        password: ${{ secrets.MODEL_INSTANTIATOR_CI_SERVICE_ACCOUNT }}
    steps:
      - uses: actions/checkout@v3
      - run: poetry check && poetry install --with test
        working-directory: ${{ env.REPOSITORY_NAME }}
      - name: Run linters
        uses: ./.github/actions/run_linters
        with:
          repository_name: ${{ env.REPOSITORY_NAME }}

  run:
    name: run
    needs:
      - build
      - tests
    runs-on: self-hosted
    container: google/cloud-sdk
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        uses: ./.github/actions/set_variables
      - id: gcloud_auth
        name: GCP authentication
        uses: ./.github/actions/gcloud_auth
        with:
          repository_name: ${{ env.REPOSITORY_NAME }}
          region: ${{ env.REGION }}
          ci_service_account: ${{ secrets.MODEL_INSTANTIATOR_CI_SERVICE_ACCOUNT }}
          google_application_credentials: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
      - run: gcloud run deploy model-instantiator --set-env-vars PROJECT_ID=${PROJECT_ID},REGION=${REGION} --port 80 --cpu "1.0" --memory "1Gi" --image ${{needs.build.outputs.image_name }} --service-account $REPOSITORY_NAME@$PROJECT_ID.iam.gserviceaccount.com --project ${PROJECT_ID} --region ${REGION}
