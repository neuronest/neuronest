name: people_counting

on:
  push:
    branches:
      - '**'
      - main
      - develop
    paths:
      - .github/workflows/people_counting.yaml
      - .github/actions/run_pre_commits/**
      - .pre-commit-config.yaml
      - shared/**
      - people-counting/**
  pull_request:
    branches:
      - main
      - develop
    paths:
      - .github/workflows/people_counting.yaml
      - shared/**
      - people-counting/**

env:
  REPOSITORY_NAME: people-counting
#  PROJECT_ID: people-counting-363015
#  PROJECT_NAME: people-counting
#  LOCATION_APP_ENGINE: europe-west3
#  REGISTRY_LOCATION: europe-west1-docker.pkg.dev
#  REGION: europe-west1
#  ZONE: europe-west9-a
#  ARTIFACT_REGISTRY_REPOSITORY: people-counting-ar
#  API_IMAGE: api
#  FIRESTORE_RESULTS_COLLECTION: countings
#  ORGANIZATION_ID: 385885390984
#  ARTIFACT_REGISTRY_NAME: europe-west1-docker.pkg.dev/people-counting-363015/people-counting-ar
#  DOCKER_REPOSITORY_NAME: neuronest


jobs:
#  setup_composed_env_variables:
#    name: setup_composed_env_variables
#    runs-on: ubuntu-latest
#    outputs:
#      DESTINATION_API_IMAGE: ${{ steps.setup_DESTINATION_API_IMAGE.outputs.DESTINATION_API_IMAGE }}
#      VIDEOS_TO_COUNT_BUCKET: ${{ steps.setup_VIDEOS_TO_COUNT_BUCKET.outputs.VIDEOS_TO_COUNT_BUCKET }}
#      COUNTED_VIDEOS_BUCKET: ${{ steps.setup_COUNTED_VIDEOS_BUCKET.outputs.COUNTED_VIDEOS_BUCKET }}
#    steps:
#      - id: setup_DESTINATION_API_IMAGE
#        run: echo "DESTINATION_API_IMAGE=${{ env.REGISTRY_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPOSITORY }}/${{ env.API_IMAGE }}:${{ github.sha }}" >> $GITHUB_OUTPUT
#      - id: setup_VIDEOS_TO_COUNT_BUCKET
#        run: echo "VIDEOS_TO_COUNT_BUCKET=${{ env.PROJECT_ID }}-videos-to-count" >> $GITHUB_OUTPUT
#      - id: setup_COUNTED_VIDEOS_BUCKET
#        run: echo "COUNTED_VIDEOS_BUCKET=${{ env.PROJECT_ID }}-counted-videos" >> $GITHUB_OUTPUT

#    needs: [setup_composed_env_variables]
#    env:
#      STAGE: ${{ needs.setup_stage.outputs.stage }}
#      DESTINATION_API_IMAGE: ${{ needs.setup_composed_env_variables.outputs.DESTINATION_API_IMAGE }}
#      VIDEOS_TO_COUNT_BUCKET: ${{ needs.setup_composed_env_variables.outputs.VIDEOS_TO_COUNT_BUCKET }}
#      COUNTED_VIDEOS_BUCKET: ${{ needs.setup_composed_env_variables.outputs.COUNTED_VIDEOS_BUCKET }}
  build_test_deploy:
    name: build_test_deploy
    runs-on: ubuntu-latest
    container:
      image: google/cloud-sdk
    steps:
      - uses: actions/checkout@v3

      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.NEURONEST_INFRASTRUCTURE_BUILDER }}

      - uses: ./.github/actions/set_variables
        with:
          repository_static_variables_file_path: people-counting/iac/static_variables.env
          repository_dynamic_variables_file_path: people-counting/iac/dynamic_variables.env

      - id: build_test_push
        uses: ./.github/actions/build_test_push
        with:
          repository_name: ${{ env.REPOSITORY_NAME }}
          gcp_registry_name: ${{ env.GCP_REGISTRY_NAME }}
          docker_repository_name: ${{ env.DOCKER_REPOSITORY_NAME }}
          dockerhub_username: ${{ fromJSON(secrets.DOCKERHUB_LOGIN).username }}
          dockerhub_password: ${{ fromJSON(secrets.DOCKERHUB_LOGIN).password }}

      - uses: ./.github/actions/set_up_terraform
        with:
          google_github_actions_auth_credentials_json: ${{ secrets.NEURONEST_INFRASTRUCTURE_BUILDER }}

      - name: Build infrastructure
        working-directory: people-counting/iac
        run:  |
          terraform init -input=false -backend-config="bucket=${{ env.TF_VAR_state_bucket }}"
          terraform apply -input=false -auto-approve
        env:
          TF_VAR_organization_id: ${{ env.ORGANIZATION_ID }}
          TF_VAR_state_bucket: ${{ env.PROJECT_ID }}-bucket-tfstate
          TF_VAR_project_id: ${{ env.PROJECT_ID }}
          TF_VAR_project_name: ${{ env.PROJECT_NAME }}
          TF_VAR_location_app_engine: ${{ env.LOCATION_APP_ENGINE }}
          TF_VAR_region: ${{ env.REGION }}
          TF_VAR_zone: ${{ env.ZONE }}
          TF_VAR_artifact_registry_repository: ${{ env.ARTIFACT_REGISTRY_REPOSITORY }}
          TF_VAR_webapp_image: ${{ steps.build_test_push.outputs.gcp_image_name }}
          TF_VAR_firestore_results_collection: ${{ env.FIRESTORE_RESULTS_COLLECTION }}
          TF_VAR_videos_to_count_bucket: ${{ env.VIDEOS_TO_COUNT_BUCKET }}
          TF_VAR_counted_videos_bucket: ${{ env.COUNTED_VIDEOS_BUCKET }}
