name: object_detection

on:
  push:
    branches:
      - main
      - develop
    paths:
      - .github/**
      - shared/**
      - object-detection/**
  pull_request:
    branches:
      - main
      - develop
    paths:
      - .github/**
      - shared/**
      - object-detection/**
  workflow_dispatch:

env:
  IMAGE_REPOSITORY: object-detection
  PACKAGE_NAME: object_detection
  DOCKERFILE_PATH: dockerfiles/object_detection.dockerfile

jobs:
  build:
    name: build
    runs-on: self-hosted
    container: google/cloud-sdk
    env:
      TARGET: training
    outputs:
      IMAGE_NAME: ${{ steps.output_step.outputs.IMAGE_NAME }}
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        uses: ./.github/actions/set_variables
      - run: mkdir -p $SERVICE_ACCOUNT_DIRECTORY && echo ${{ secrets.OBJECT_DETECTION_CI_SERVICE_ACCOUNT }} | base64 -d > $GOOGLE_APPLICATION_CREDENTIALS
      - run: gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
      - run: gcloud auth configure-docker
      - run: docker pull $ARTIFACT_REGISTRY_PATH/$IMAGE_REPOSITORY:latest || true
      - run: docker build --cache-from $ARTIFACT_REGISTRY_PATH/$IMAGE_REPOSITORY:latest --build-arg STAGE=$STAGE -t $ARTIFACT_REGISTRY_PATH/$IMAGE_REPOSITORY:$GITHUB_RUN_ID -t $ARTIFACT_REGISTRY_PATH/$IMAGE_REPOSITORY:latest -f $DOCKERFILE_PATH --target $TARGET .
      - run: docker push $ARTIFACT_REGISTRY_PATH/$IMAGE_REPOSITORY --all-tags
      - id: output_step
        run: echo "IMAGE_NAME=$ARTIFACT_REGISTRY_PATH/$IMAGE_REPOSITORY:$GITHUB_RUN_ID" >> $GITHUB_OUTPUT

  tests:
    name: tests
    needs:
      - build
    runs-on: self-hosted
    container:
      image: ${{needs.build.outputs.IMAGE_NAME}}
      credentials:
        username: _json_key_base64
        password: ${{ secrets.OBJECT_DETECTION_CI_SERVICE_ACCOUNT }}
    steps:
      - uses: actions/checkout@v3
      - name: Run pre-commit
        uses: ./.github/actions/run_pre_commit
        with:
          repository_path: object-detection

  train:
    name: train
    needs:
      - tests
      - build
    runs-on: self-hosted
    defaults:
      run:
        working-directory: /app
    container:
      image: ${{needs.build.outputs.IMAGE_NAME}}
      credentials:
        username: _json_key_base64
        password: ${{ secrets.OBJECT_DETECTION_CI_SERVICE_ACCOUNT }}
    env:
      RUN_ID: $(uuidgen)
      MODEL_PATH: gs://$IMAGE_REPOSITORY-models/$PACKAGE_NAME-$RUN_ID
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variables
        uses: ./.github/actions/set_variables
      - run: echo "IMAGE_NAME"="${{ needs.build.outputs.IMAGE_NAME }}" >> $GITHUB_ENV
      - run: mkdir -p $SERVICE_ACCOUNT_DIRECTORY && echo ${{ secrets.OBJECT_DETECTION_SERVICE_ACCOUNT }} | base64 -d > $GOOGLE_APPLICATION_CREDENTIALS
      - run: gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
      - run: python -m object_detection.cli --model-path $MODEL_PATH --mode training
